name: windows

on:
  push:
    paths-ignore:
    - '**.md'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019]
        architecture: [Win32, x64]
        build_type: [debug, release, distribution]
      fail-fast: false

    steps:
    - name: Cache
      uses: actions/cache@v2
      env:
        cache-name: cache-chocolatey
      with:
        path: ~\AppData\Local\Temp\chocolatey
        key: ${{ runner.os }}-build-${{ env.cache-name }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Install Vulkan
      run: |
          choco install vulkan-sdk
          $env:ChocolateyInstall = Convert-Path "$((Get-Command choco).Path)\..\.."
          Import-Module "$env:ChocolateyInstall\helpers\chocolateyProfile.psm1"
          refreshenv
          echo "::set-env name=VULKAN_SDK::${env:VULKAN_SDK}"

    - uses: actions/checkout@v2

    - name: Create build directory
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure
      working-directory: ${{runner.workspace}}/build
      run: cmake ${env:GITHUB_WORKSPACE} -A ${{ matrix.architecture }} -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DGG_OPENGL=ON -DGG_VULKAN=ON -DGGLIBS_ENABLE_DOC=OFF -DGGLIBS_ENABLE_TESTING=ON

    - name: Build
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{runner.workspace}}/build
      run: ctest -C ${{ matrix.build_type }} --output-on-failure
