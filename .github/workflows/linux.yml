name: linux

on:
  push:
    paths-ignore:
    - '**.md'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04]
        build_type: [debug, release, distribution]
      fail-fast: false

    steps:
    - name: Cache
      uses: actions/cache@v2
      env:
        cache-name: cache-apt
      with:
        path: /var/cache/apt
        key: ${{ runner.os }}-build-${{ env.cache-name }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Install Open GL
      run: sudo apt install libgl1-mesa-dev

    - name: Install Vulkan
      run: |
          sudo apt install libvulkan1 libvulkan-dev
          echo "::set-env name=VULKAN_SDK::${env:VULKAN_SDK}"

    - uses: actions/checkout@v2

    - name: Create build directory
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DGG_OPENGL=ON -DGG_VULKAN=ON -DGGLIBS_ENABLE_DOC=OFF -DGGLIBS_ENABLE_TESTING=ON

    - name: Build
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --config ${{ matrix.build_type }}

    - name: Test
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: ctest -C ${{ matrix.build_type }} --output-on-failure